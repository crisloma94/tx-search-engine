{
  "version": 3,
  "sources": ["../../react-router/lib/polyfills/start-transition.ts", "../../react-router/lib/context.ts", "../../react-router/lib/hooks.tsx", "../../react-router/lib/components.tsx", "../../react-router/index.ts"],
  "sourcesContent": ["import * as React from \"react\";\n\n/**\n  Not a true \"polyfill\" since we guard via the feature flag at runtime,\n  but close enough :)\n\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nexport default React[START_TRANSITION];\n", "import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n", "import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n  return state.blockers.get(blockerKey) || blocker;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n", "import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport startTransitionImpl from \"./polyfills/start-transition\";\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n", "import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport startTransitionImpl from \"./lib/polyfills/start-transition\";\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n  startTransitionImpl as UNSAFE_startTransitionImpl,\n};\n"],
  "mappings": "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",
  "names": ["START_TRANSITION", "React", "DataRouterContext", "createContext", "process", "displayName", "DataRouterStateContext", "AwaitContext", "NavigationContext", "LocationContext", "RouteContext", "outlet", "matches", "isDataRoute", "RouteErrorContext", "useHref", "to", "_temp", "relative", "useInRouterContext", "invariant", "basename", "navigator", "useContext", "hash", "pathname", "search", "useResolvedPath", "joinedPathname", "joinPaths", "createHref", "useLocation", "location", "useNavigationType", "navigationType", "useMatch", "pattern", "useMemo", "matchPath", "navigateEffectWarning", "useIsomorphicLayoutEffect", "cb", "isStatic", "static", "useLayoutEffect", "useNavigate", "useNavigateStable", "useNavigateUnstable", "dataRouterContext", "locationPathname", "routePathnamesJson", "JSON", "stringify", "getPathContributingMatches", "map", "match", "pathnameBase", "activeRef", "useRef", "current", "navigate", "useCallback", "options", "warning", "go", "path", "resolveTo", "parse", "replace", "push", "state", "OutletContext", "useOutletContext", "useOutlet", "context", "createElement", "Provider", "value", "useParams", "routeMatch", "length", "params", "_temp2", "useRoutes", "routes", "locationArg", "useRoutesImpl", "dataRouterState", "parentMatches", "parentParams", "parentPathname", "parentPathnameBase", "parentRoute", "route", "parentPath", "warningOnce", "endsWith", "locationFromContext", "_parsedLocationArg$pa", "parsedLocationArg", "parsePath", "startsWith", "remainingPathname", "slice", "matchRoutes", "element", "undefined", "Component", "renderedMatches", "_renderMatches", "Object", "assign", "encodeLocation", "_extends", "key", "NavigationType", "Pop", "DefaultErrorComponent", "error", "useRouteError", "message", "isRouteErrorResponse", "status", "statusText", "Error", "stack", "lightgrey", "preStyles", "padding", "backgroundColor", "codeStyles", "devInfo", "console", "Fragment", "style", "fontStyle", "defaultErrorElement", "RenderErrorBoundary", "constructor", "props", "revalidation", "getDerivedStateFromError", "getDerivedStateFromProps", "componentDidCatch", "errorInfo", "render", "routeContext", "children", "component", "RenderedRoute", "_ref", "staticContext", "errorElement", "ErrorBoundary", "_deepestRenderedBoundaryId", "id", "_dataRouterState2", "_dataRouterState", "errors", "errorIndex", "findIndex", "m", "keys", "join", "Math", "min", "reduceRight", "index", "concat", "getChildren", "DataRouterHook", "DataRouterStateHook", "getDataRouterConsoleError", "hookName", "useDataRouterContext", "ctx", "useDataRouterState", "useRouteContext", "useCurrentRouteId", "thisRoute", "useRouteId", "UseRouteId", "useNavigation", "UseNavigation", "navigation", "useRevalidator", "UseRevalidator", "revalidate", "router", "useMatches", "loaderData", "UseMatches", "data", "handle", "useLoaderData", "UseLoaderData", "routeId", "useRouteLoaderData", "UseRouteLoaderData", "useActionData", "UseActionData", "values", "actionData", "_state$errors", "UseRouteError", "useAsyncValue", "_data", "useAsyncError", "_error", "blockerId", "useBlocker", "shouldBlock", "UseBlocker", "blockerKey", "useState", "String", "blockerFunction", "args", "blocker", "getBlocker", "useEffect", "deleteBlocker", "blockers", "get", "UseNavigateStable", "fromRouteId", "alreadyWarned", "cond", "RouterProvider", "fallbackElement", "future", "setStateImpl", "v7_startTransition", "setState", "newState", "startTransitionImpl", "subscribe", "n", "opts", "preventScrollReset", "Router", "historyAction", "initialized", "DataRoutes", "_ref2", "MemoryRouter", "_ref3", "initialEntries", "initialIndex", "historyRef", "createMemoryHistory", "v5Compat", "history", "action", "listen", "Navigate", "_ref4", "jsonPath", "Outlet", "Route", "_props", "_ref5", "basenameProp", "locationProp", "staticProp", "navigationContext", "locationContext", "trailingPathname", "stripBasename", "Routes", "_ref6", "createRoutesFromChildren", "Await", "_ref7", "resolve", "AwaitErrorBoundary", "ResolveAwait", "AwaitRenderStatus", "neverSettledPromise", "Promise", "promise", "pending", "success", "defineProperty", "renderError", "reject", "catch", "_tracked", "then", "AbortedDeferredError", "_ref8", "toRender", "Children", "forEach", "isValidElement", "treePath", "type", "apply", "name", "caseSensitive", "loader", "hasErrorBoundary", "shouldRevalidate", "lazy", "renderMatches", "mapRouteProperties", "updates", "createMemoryRouter", "createRouter", "v7_prependBasename", "hydrationData", "initialize"]
}
